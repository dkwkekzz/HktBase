syntax = "proto3";

import "google/protobuf/empty.proto";

package hkt;

service HktRpcService {
    // 그룹 동기화를 위한 스트리밍 RPC
    rpc SyncGroup(SyncRequest) returns (stream SyncResponse);
    // 모든 Behavior 요청을 처리하는 단일 RPC
    rpc ExecuteBehavior(BehaviorRequest) returns (google.protobuf.Empty);
}

message SyncRequest {
    int64 player_id = 1;
    int32 group_id = 2;
}

// 범용 Behavior 패킷. "Envelope Pattern"
// 어떤 종류의 패킷인지(type_name)와 직렬화된 데이터(payload)를 담습니다.
message BehaviorPacket {
    int64 behavior_id = 1;
    int64 owner_player_id = 2;
    int32 behavior_type_id = 3;
    bytes payload = 4;             // USTRUCT가 직렬화된 바이너리 데이터
}

message BehaviorRequest {
    int32 group_id = 1;
    BehaviorPacket packet = 2;
}

message SyncResponse {
    BehaviorPacket packet = 1;
}

